document.addEventListener('DOMContentLoaded', () => {
    const track = document.querySelector('.carousel-track');
    const prevButton = document.querySelector('.carousel-button.prev');
    const nextButton = document.querySelector('.carousel-button.next');

    // --- IMPORTANT ---
    // Replace this array with your actual image paths from the 'img/' directory.
    // This array would ideally be generated by a server-side script or a build process.
    const imagePaths = [
        'img/image_1.jpeg',
        'img/image_2.jpeg',
        'img/image_3.jpeg',
        'img/image_4.jpeg',
        'img/image_5.jpeg',
        'img/image_6.jpeg',
	    
    ];
    // --- END IMPORTANT ---

    const itemsPerView = 3;
    let currentIndex = 0;

    function loadImages() {
        track.innerHTML = ''; // Clear existing images
        imagePaths.forEach(src => {
            const item = document.createElement('div');
            item.classList.add('carousel-item');
            const img = document.createElement('img');
            img.src = src;
            img.alt = "Carousel Image"; // Consider more descriptive alt text if possible
            item.appendChild(img);
            track.appendChild(item);
        });
    }

    function updateCarousel() {
        const itemWidth = track.querySelector('.carousel-item').offsetWidth;
        const totalScrollableWidth = itemWidth * currentIndex;
        track.style.transform = `translateX(-${totalScrollableWidth}px)`;

        // Update button states
        prevButton.disabled = currentIndex === 0;
        nextButton.disabled = currentIndex >= imagePaths.length - itemsPerView;

        // If there are fewer images than itemsPerView, disable next button always
        if (imagePaths.length <= itemsPerView) {
            nextButton.disabled = true;
        }
    }

    if (imagePaths.length > 0) {
        loadImages();
        updateCarousel(); // Initial call to set button states
    } else {
        track.innerHTML = '<p>No images to display.</p>';
        prevButton.style.display = 'none';
        nextButton.style.display = 'none';
        return; // Exit if no images
    }


    nextButton.addEventListener('click', () => {
        if (currentIndex < imagePaths.length - itemsPerView) {
            currentIndex++;
            updateCarousel();
        }
    });

    prevButton.addEventListener('click', () => {
        if (currentIndex > 0) {
            currentIndex--;
            updateCarousel();
        }
    });

    // Optional: Recalculate on window resize if dimensions are percentage-based
    window.addEventListener('resize', () => {
        if (imagePaths.length > 0) {
             updateCarousel(); // Re-calculate transform based on new item width
        }
    });
});
